<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://wengang.top</id><title>瓜田月夜</title><subtitle>瓜田月夜, python, go, linux,</subtitle> <updated>2020-12-15T11:16:35+08:00</updated> <author> <name>瓜田月夜</name> <uri>https://wengang.top</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="https://wengang.top" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2020 瓜田月夜 </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>gin源码初读</title><link href="https://wengang.top/posts/gin%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/" rel="alternate" type="text/html" title="gin源码初读" /><published>2020-12-14T20:15:00+08:00</published> <updated>2020-12-15T09:59:16+08:00</updated> <id>https://wengang.top/posts/gin%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id> <content src="https://wengang.top/posts/gin%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/" /> <author> <name>瓜田月夜</name> </author> <category term="编程语言" /> <category term="go语言" /> <summary> Hello World 众所周知, 编程起源Hello World, 让俺们从Hello World开始吧. package main import "github.com/gin-gonic/gin" func main() { r := gin.Default() // 返回一个Engine实例, 它包含路由, 中间件和配置信息 r.GET("/ping", func(c *gin.Context) { c.JSON(200, gin.H{ "message": "pong", }) }) r.Run() // listen and serve on 0.0.0.0:8080 } gin.Engine gin.Default()返回了一个Engine对象, 构造如下 type Engine struct { // Engine组合了... </summary> </entry> <entry><title>Go语言入门</title><link href="https://wengang.top/posts/Go%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/" rel="alternate" type="text/html" title="Go语言入门" /><published>2020-12-05T11:33:00+08:00</published> <updated>2020-12-15T11:15:59+08:00</updated> <id>https://wengang.top/posts/Go%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/</id> <content src="https://wengang.top/posts/Go%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/" /> <author> <name>瓜田月夜</name> </author> <category term="编程语言" /> <category term="go语言" /> <summary> Hello World示例 package main import "fmt" func main(){ fmt.Println("Hello world") } main包的main函数是go程序的入口函数 标识符 关键字 go语言仅有25个关键字, 按功能可分为3部分 引导程序整体结构的8个关键字 package // 定义包名的关键字 import // 导入包名关键字 const // 常量声明的关键字 var // 变量声明的关键字 func // 函数声明的关键字 defer // 延迟执行的关键字 go // 并发语法糖关键字 return // 函数返回关键字 声明复合数据结构的4个关键字 struct // 定义结构体关键字 interface // 定义接口关键字 map // 声明或创建map类型关键字 chan // 声明或创建ch... </summary> </entry> </feed>
